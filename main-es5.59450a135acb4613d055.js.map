{"version":3,"sources":["webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/common/app-common.module.ts","webpack:///src/app/common/services/session.service.ts","webpack:///src/app/common/services/storage.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/common/components/ss-data-chart/ss-data-chart.html","webpack:///src/app/common/components/ss-data-chart/ss-data-chart.component.ts","webpack:///src/app/common/services/tracker.service.ts","webpack:///src/app/pages/video-statistics-page/video-statistics-page.html","webpack:///src/app/pages/video-statistics-page/video-statistics-page.component.ts","webpack:///src/app/common/pipes/secs-to-mins.pipe.ts","webpack:///src/app/common/components/ss-video-player/ss-video-player.html","webpack:///src/app/common/components/ss-video-player/ss-video-player.component.ts","webpack:///src/app/pages/error-page/error-page.component.ts","webpack:///src/app/pages/video-player-page/video-player-page.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/pages/video-player-page/video-player-page.html","webpack:///src/app/pages/error-page/error-page.html","webpack:///src/main.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyAsyncContext","Promise","then","AppCommonModule","SessionService","StorageService","AppComponent","title","isMenuCollapsed","this","key","value","window","localStorage","setItem","defaultValue","getItem","object","JSON","stringify","putValue","defaultObject","getValue","parse","sessionID","generateUUIDV4","console","log","replace","c","r","Math","random","toString","SSDataChartComponent","TrackerService","onClick","simpleChanges","config","data","renderChart","getChartData","onresize","chart","render","resize","draw","chartData","that","type","datasets","options","maintainAspectRatio","legend","display","position","ev","arrays","emit","length","_index","merge","chartCanvas","destroy","nativeElement","labels","cloneDeep","index","hasOwnProperty","labelProperty","push","i","colors","generateRandomColors","label","backgroundColor","translucent","borderColor","opaque","borderWidth","valueProperty","colorPrefix","floor","quantity","color","generateRandomColor","find","SSChartType","Line","Bar","Radar","Pie","Doughnut","PolarArea","Scatter","sessionService","storageService","_trackerPrefix","_trackerObject","_trackerID","simpleIDGenerator","getObject","videoTitle","stopTracking","_trackerTimer","setInterval","track","clearInterval","putObject","trackingData","rawTrackingData","indexOf","trackerObject","duration","groupBy","group","totalWatchingTime","sumBy","impression","durationPerImpression","prefix","substr","SecsToMinsPipe","VideoStatisticsPageComponent","trackerService","videoStatsChartData","videoStatsDurationChartConfig","scales","yAxes","ticks","beginAtZero","text","videoStatsImpressionChartConfig","getTrackingData","secs","m","s","SSVideoPlayerComponent","ErrorPageComponent","VideoPlayerPageComponent","AppModule","changeDetectorRef","selectedVideoSourceIndex","isPlaying","isInFullScreenMode","volume","currentTime","seekBarPercentage","overlayTimeoutInstance","timeBeforeHide","selectedVideoSource","source","poster","initialTime","autoplay","mute","loop","SSLoopType","None","trackUser","sources","video","videoRef","clearOverlayTimeout","detectChanges","document","addEventListener","webkitIsFullScreen","event","togglePlayingState","changes","stop","play","startTracking","pause","skip","Once","All","next","setTimeout","volumeBarHeight","target","ratio","offsetY","buttons","onVolumeChange","offsetX","onSeek","reset","videoOverlay","style","opacity","cursor","clearTimeout","wrapper","videoWrapper","webkitCancelFullScreen","webkitRequestFullScreen","onVideoLoaded","onVideoPlaying","onVideoTimeUpdated","onVideoEnded","SSVideoSource","routes","path","redirectTo","pathMatch","component","videoSources","videoSource","playerConfig","filter","vs","errorCode","errorMessage","forRoot","useHash","relativeLinkResolution","bootstrapModule","err"],"mappings":"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","file":"x","sourcesContent":["var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n// components\nimport { SSVideoPlayerComponent } from './components/ss-video-player/ss-video-player.component';\nimport { SSDataChartComponent } from './components/ss-data-chart/ss-data-chart.component';\nimport { SSInputComponent } from './components/ss-input/ss-input.component';\n\n// pipes\nimport { SecsToMinsPipe } from './pipes/secs-to-mins.pipe';\n\n// services\nimport { StorageService } from './services/storage.service';\nimport { SessionService } from './services/session.service';\n\n@NgModule({\n    declarations: [\n        SSVideoPlayerComponent,\n        SSDataChartComponent,\n        SSInputComponent,\n        SecsToMinsPipe\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule\n    ],\n    exports: [\n        SSVideoPlayerComponent,\n        SSDataChartComponent,\n        SSInputComponent,\n        FormsModule\n    ],\n    providers: [\n        // If we call the service in this section, it will be a shared service\n        SessionService,\n        StorageService\n    ]\n})\nexport class AppCommonModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class SessionService {\n    sessionID: string;\n\n    constructor() {\n        this.sessionID = this.generateUUIDV4();\n        // Session created\n        console.log('Session ID: ' + this.sessionID);\n    }\n\n    /**\n     * generates UUID v4\n     */\n    private generateUUIDV4() {\n        // for more information : https://www.ietf.org/rfc/rfc4122.txt\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            // tslint:disable-next-line:no-bitwise\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n@Injectable()\nexport class StorageService {\n    /**\n     * You can store a value in the storage with this function.\n     * @param key unique identifier for the data will be stored\n     * @param value value to be stored in the storage\n     */\n    putValue(key: string, value: string): void {\n        window.localStorage.setItem(key, value);\n    }\n\n    /**\n     * You can get stored value with the key identifier.\n     * @param key unique identifier for the stored data\n     * @param defaultValue if no data found, this value will be returned\n     */\n    getValue(key: string, defaultValue?: string): string {\n        return window.localStorage.getItem(key) || defaultValue || null;\n    }\n\n    /**\n     * You can store an object in the storage with this function.\n     * @param key unique identifier for the stored object\n     * @param object object to be stored in the storage\n     */\n    putObject(key: string, object: object): void {\n        if (typeof object === 'object') {\n            // Object must be converted to string before store.\n            const value = JSON.stringify(object);\n            this.putValue(key, value);\n        } else {\n            throw new Error('Value must be an object!');\n        }\n    }\n\n    /**\n     * You can get stored object with the key identifier.\n     * @param key unique identifier for the stored object\n     * @param defaultValue if no data found, this object will be returned\n     */\n    getObject(key, defaultObject?: object): object {\n        const value = this.getValue(key);\n        return value ? JSON.parse(value) : (defaultObject || null);\n    }\n}\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'ss-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Video Player Showcase';\n  isMenuCollapsed = true;\n\n  toggleMenu() {\n    this.isMenuCollapsed = !this.isMenuCollapsed;\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"#\">{{title}}</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-menu\"\n        aria-controls=\"navbar-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbar-menu\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"video-player\">\n                    <i class=\"fa fa-play-circle\" aria-hidden=\"true\"></i>\n                    Player\n                </a>\n            </li>\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"video-statistics\">\n                    <i class=\"fa fa-bar-chart\" aria-hidden=\"true\"></i>\n                    Statistics\n                </a>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n<main role=\"main\" class=\"container\">\n    <div class=\"p-5\">\n        <router-outlet></router-outlet>\n    </div>\n</main>","<div class=\"chart-container\">\n    <div class=\"vertical-center text-center\" *ngIf=\"!data || data.length === 0\">\n        <p>Nothing to show</p>\n    </div>\n    <canvas #chartCanvas></canvas>\n</div>","import { Component, Input, Output, AfterViewInit, OnChanges, SimpleChanges, ViewChild, ElementRef, EventEmitter } from '@angular/core';\n\nimport _ from 'lodash';\nimport Chart from 'chart.js';\n@Component({\n    selector: 'ss-data-chart',\n    templateUrl: 'ss-data-chart.html',\n    styleUrls: ['ss-data-chart.scss']\n})\nexport class SSDataChartComponent implements OnChanges, AfterViewInit {\n    @Input() config: SSDataChartConfig;\n    @Input() data: Array<any>;\n    @Output() onClick: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('chartCanvas', { static: true }) chartCanvas: ElementRef;\n\n    chart: any;\n\n    ngOnChanges(simpleChanges: SimpleChanges) {\n        // If we detect config or data change outside the component, we should re-render the chart.\n        if (simpleChanges.config || simpleChanges.data) {\n            this.renderChart(this.getChartData());\n        }\n    }\n\n    ngAfterViewInit() {\n        // It will be useful when window resizing, chart.js canvas resize method should be called on resize.\n        window.onresize = () => {\n            this.chart.render(true);\n            this.chart.resize();\n            this.chart.draw();\n        };\n    }\n\n    /**\n     * It renders chart with the given data\n     * @param chartData processed chart data\n     */\n    renderChart(chartData: any): void {\n        const that: this = this;\n\n        const config: Chart.ChartConfiguration = {\n            type: this.config.datasets[0].type,\n            data: chartData,\n            options: {\n                maintainAspectRatio: false,\n                legend: {\n                    display: true,\n                    position: 'bottom'\n                },\n                onClick: function (ev: MouseEvent, arrays: any[]) {\n                    const selectedData = arrays && arrays.length > 0 ? that.data[arrays[0]._index] : null;\n                    that.onClick.emit(selectedData);\n                }\n            }\n        };\n\n        config.options = _.merge(config.options, this.config.options);\n\n        if (this.chartCanvas) {\n            if (this.chart) {\n                // If we have a recent chart reference, it will be better to destroy it.\n                this.chart.destroy();\n                this.chart = null;\n            }\n\n            this.chart = new Chart(this.chartCanvas.nativeElement, config);\n        }\n    }\n\n    /**\n     * creates chart data that can be used by chart.js with the given raw data.\n     */\n    getChartData() {\n        const data = {\n            labels: this.config.labels ? _.cloneDeep(this.config.labels) : [],\n            datasets: [],\n        };\n\n        for (const index in this.data) {\n            if (this.data.hasOwnProperty(index)) {\n                if (this.config.labelProperty) {\n                    data.labels.push(this.data[index][this.config.labelProperty]);\n                }\n\n                for (let i = 0; i < this.config.datasets.length; i++) {\n\n                    if (data.datasets.length <= i) {\n                        const colors = this.generateRandomColors(this.data.length);\n\n                        data.datasets.push({\n                            type: this.config.datasets[i].type,\n                            label: this.config.datasets[i].label || '',\n                            data: [],\n                            backgroundColor: colors.map((c) => c.translucent),\n                            borderColor: colors.map((c) => c.opaque),\n                            borderWidth: 1\n                        });\n\n                        data.datasets[i] = _.merge(data.datasets[i], this.config.datasets[i].options);\n                    }\n\n                    if (this.config.datasets[i].labelProperty) {\n                        data.datasets[i].label = this.data[index][this.config.datasets[i].labelProperty];\n                    }\n\n                    data.datasets[i].data.push(this.data[index][this.config.datasets[i].valueProperty]);\n                }\n            }\n        }\n\n        return data;\n    }\n\n    /**\n     * generates random color between rgba(0,0,0,?) and rgba(255,255,255,?). (?:alfa channel can be set manually)\n     */\n    generateRandomColor(): Color {\n        const r = Math.floor(Math.random() * 255);\n        const g = Math.floor(Math.random() * 255);\n        const b = Math.floor(Math.random() * 255);\n\n        const colorPrefix = 'rgba(' + r + ',' + g + ',' + b + ',';\n\n        return {\n            translucent: colorPrefix + '0.8)',\n            opaque: colorPrefix + '1)'\n        };\n    }\n\n    /**\n     * generates colors by desired quantity\n     * @param quantity number of the colors\n     */\n    generateRandomColors(quantity: number): Array<Color> {\n        const colors: Array<Color> = [];\n\n        for (let i = 0; i < quantity; i++) {\n            const color = this.generateRandomColor();\n\n            const foundColors = _.find(colors, color);\n            if (foundColors) {\n                i--;\n                continue;\n            }\n\n            colors.push(color);\n        }\n\n        return colors;\n    }\n}\n\ninterface Color {\n    translucent: string; // semi-transparent color\n    opaque: string; // solid color\n}\n\nexport interface SSDataChartConfig {\n    labels?: string[]; // chart labels for the x axis\n    labelProperty?: string; // dynamic label property\n    datasets: Array<SSDataChartDataSet>; // one dataset should be given to create chart\n    options?: any; // chart.js global options\n}\n\nexport interface SSDataChartDataSet {\n    type: SSChartType; // type of the chart. for example: line, bar, pie, ... etc.\n    label?: string; // label will be shown in the info popup\n    labelProperty?: string; // dynamic label property\n    valueProperty: string; // dynamic value property, actual data\n    options?: any; // chart.js dataset options\n}\n\n// chart.js chart types\nexport enum SSChartType {\n    Line = 'line',\n    Bar = 'bar',\n    Radar = 'radar',\n    Pie = 'pie',\n    Doughnut = 'doughnut',\n    PolarArea = 'polarArea',\n    Scatter = 'scatter'\n}\n","import { Injectable } from '@angular/core';\nimport { SessionService } from './session.service';\nimport { StorageService } from './storage.service';\n\nimport _ from 'lodash';\n@Injectable()\nexport class TrackerService {\n    private _trackerPrefix = 'tracker_';\n    private _trackerID: string;\n    private _trackerTimer: any;\n    private _trackerObject: object = {};\n\n    constructor(\n        private sessionService: SessionService,\n        private storageService: StorageService\n    ) {\n        this._trackerID = this.simpleIDGenerator(this._trackerPrefix);\n        this._trackerObject = this.storageService.getObject(this._trackerID, {});\n    }\n\n    /**\n     * You can tell to the tracker to start tracking.\n     * @param videoTitle unique identifier for the video\n     */\n    startTracking(videoTitle: string) {\n        // to ensure it is stopped before start it again.\n        this.stopTracking();\n        this._trackerTimer = setInterval(() => this.track(videoTitle), 1000); // we should use one sec to correctly estimate watching times.\n    }\n\n    /**\n     * If tracking is running and there is no video is playing, you should stop the tracker.\n     */\n    stopTracking() {\n        if (this._trackerTimer) {\n            clearInterval(this._trackerTimer);\n            this._trackerTimer = null;\n        }\n    }\n\n    /**\n     * Every time this method called, it will increase the value of the duration that is belong to the tracked video.\n     * @param videoTitle unique identifier for the video\n     */\n    private track(videoTitle: string) {\n        // this method generates object like <trackerID>:\"{<sessionID>:{<videoTitle>:<duration>,...}}\"\n        const sessionObject = this._trackerObject[this.sessionService.sessionID];\n\n        if (!sessionObject) {\n            this._trackerObject[this.sessionService.sessionID] = {};\n        }\n\n        const videoObject = this._trackerObject[this.sessionService.sessionID][videoTitle];\n\n        if (!videoObject) {\n            this._trackerObject[this.sessionService.sessionID][videoTitle] = 0;\n        }\n\n        // we are adding one sec to the current data\n        this._trackerObject[this.sessionService.sessionID][videoTitle] += 1;\n\n        // after increment we should save data\n        this.storageService.putObject(this._trackerID, this._trackerObject);\n\n        console.log('Hey, i am ' + this._trackerID + ' and you are watching \"' + videoTitle + '\", right ?');\n    }\n\n    /**\n     * You can get collected tracking data and play with them.\n     */\n    getTrackingData(): Array<TrackingInfo> {\n        let trackingData: Array<TrackingInfo> = [];\n        const rawTrackingData = [];\n\n        for (const key in localStorage) {\n            if (localStorage.hasOwnProperty(key)) {\n\n                if (key.indexOf(this._trackerPrefix) < 0) {\n                    // If it is not a tracking key, we will skip it.\n                    continue;\n                }\n\n                const trackerObject = this.storageService.getObject(key, {});\n\n                for (const sessionID in trackerObject) {\n                    if (trackerObject.hasOwnProperty(sessionID)) {\n                        for (const title in trackerObject[sessionID]) {\n                            if (trackerObject[sessionID].hasOwnProperty(title)) {\n                                const statInfo = {\n                                    sessionID: sessionID,\n                                    title: title,\n                                    duration: trackerObject[sessionID][title]\n                                };\n\n                                rawTrackingData.push(statInfo);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (rawTrackingData.length > 0) {\n            // we should process raw data before use it and proper way to do this is grouping by title.\n            trackingData = _.map(_.groupBy(rawTrackingData, 'title'), group => {\n                const totalWatchingTime = _.sumBy(group, 'duration');\n                const impression = group.length;\n\n                const trackingInfo: TrackingInfo = {\n                    title: group[0].title,\n                    duration: totalWatchingTime,\n                    impression: group.length,\n                    durationPerImpression: Math.floor(totalWatchingTime / impression)\n                };\n\n                return trackingInfo;\n            });\n        }\n\n        return trackingData;\n    }\n\n    /**\n     * it generates a short random alphanumeric string.\n     * @param prefix a short identifier for the key\n     */\n    private simpleIDGenerator(prefix: string): string {\n        return prefix + Math.random().toString(36).substr(2, 9);\n    }\n}\nexport interface TrackingInfo {\n    sessionID?: string; // Current session id\n    title: string; // Title of the video\n    duration: number; // Total number of watching times\n    impression: number; // Total impression count\n    durationPerImpression: number; // Duration per impression\n}\n","<div class=\"row\" *ngIf=\"!videoStatsChartData || videoStatsChartData.length === 0\">\n    <div class=\"col-md-12 text-center bold\">\n        <h2>Try to watch some video and come back here to see the magic <i class=\"fa fa-magic fa-lg text-primary\" aria-hidden=\"true\"></i></h2>\n        <hr />\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <ss-data-chart [config]=\"videoStatsDurationChartConfig\" [data]=\"videoStatsChartData\"></ss-data-chart>\n        <hr />\n        <ss-data-chart [config]=\"videoStatsImpressionChartConfig\" [data]=\"videoStatsChartData\"></ss-data-chart>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { SSDataChartConfig, SSChartType } from '../../common/components/ss-data-chart/ss-data-chart.component';\nimport { TrackerService } from '../../common/services/tracker.service';\n\n@Component({\n    templateUrl: 'video-statistics-page.html',\n    providers: [TrackerService]\n})\nexport class VideoStatisticsPageComponent {\n    videoStatsDurationChartConfig: SSDataChartConfig;\n    videoStatsImpressionChartConfig: SSDataChartConfig;\n    videoStatsWatchingTimesPerImpressionChartConfig: SSDataChartConfig;\n    videoStatsChartData: Array<any> = [];\n\n    constructor(private trackerService: TrackerService) {\n\n        this.videoStatsDurationChartConfig = {\n            labelProperty: 'title',\n            datasets: [{\n                type: SSChartType.Bar,\n                label: 'Total Duration',\n                valueProperty: 'duration'\n            },\n            {\n                type: SSChartType.Bar,\n                label: 'Duration Per Impression',\n                valueProperty: 'durationPerImpression'\n            }],\n            options: {\n                scales: {\n                    yAxes: [{\n                        display: true,\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                },\n                title: {\n                    display: true,\n                    text: 'Total Watching Times and Watching Times Per Impression In Seconds'\n                },\n                legend: {\n                    display: false\n                }\n            }\n        };\n\n        this.videoStatsImpressionChartConfig = {\n            labelProperty: 'title',\n            datasets: [{\n                type: SSChartType.Bar,\n                label: 'Number of Impressions',\n                valueProperty: 'impression'\n            }],\n            options: {\n                scales: {\n                    yAxes: [{\n                        display: true,\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                },\n                title: {\n                    display: true,\n                    text: 'Total Number of Impressions'\n                },\n                legend: {\n                    display: false\n                }\n            }\n        };\n\n        this.videoStatsChartData = this.trackerService.getTrackingData();\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * it converts numbers to string formatted like 00:00\n */\n@Pipe({\n    name: 'secsToMins'\n})\nexport class SecsToMinsPipe implements PipeTransform {\n    transform(secs: number): string {\n\n        const m = Math.floor(secs / 60); // minutes\n        const s = Math.floor(secs % 60); // seconds\n\n        return (m > 9 ? m : '0' + m) + ':' + (s > 9 ? s : '0' + s);\n    }\n}\n","<div #videoWrapper class=\"video-wrapper\" [class.fullscreen]=\"isInFullScreenMode\">\n    <video #video [src]=\"selectedVideoSource.source\" (loadeddata)=\"onVideoLoaded()\" (playing)=\"onVideoPlaying()\"\n        (timeupdate)=\"onVideoTimeUpdated()\" (ended)=\"onVideoEnded()\">\n        Sorry, Your browser does not support HTML5 video feature\n    </video>\n    <div class=\"video-poster\" *ngIf=\"selectedVideoSource.poster && currentTime === 0\">\n        <img [src]=\"selectedVideoSource.poster\" alt=\"poster\" />\n    </div>\n    <div #videoOverlay class=\"video-overlay\" [class.in]=\"currentTime === 0\" (mousemove)=\"clearOverlayTimeout(true)\">\n        <div class=\"video-overlay-header\">{{selectedVideoSource.title}}</div>\n        <div class=\"video-overlay-buttons\">\n            <div class=\"prev-next-button prev\" (click)=\"prev()\" *ngIf=\"selectedVideoSourceIndex > 0\">\n                <div class=\"inner-circle\">\n                    <div class=\"icon-shape\"></div>\n                </div>\n            </div>\n            <div class=\"play-pause-button\" (click)=\"togglePlayingState()\">\n                <div class=\"inner-circle\">\n                    <div class=\"shape-shifter\" [ngClass]=\"{ 'play': !isPlaying, 'pause': isPlaying }\"></div>\n                </div>\n            </div>\n            <div class=\"prev-next-button next\" (click)=\"next()\" *ngIf=\"sources.length - 1 > selectedVideoSourceIndex\">\n                <div class=\"inner-circle\">\n                    <div class=\"icon-shape\"></div>\n                </div>\n            </div>\n        </div>\n        <div class=\"video-overlay-footer\" *ngIf=\"currentTime > 0\">\n            <div class=\"video-custom-controls\">\n                <div class=\"table-layout padding-lr-5\">\n                    <div class=\"table-cell col-fixed-25\">\n                        <div class=\"play-pause-button mini\" (click)=\"togglePlayingState()\">\n                            <div class=\"shape-shifter\" [ngClass]=\"{ 'play': !isPlaying, 'pause': isPlaying }\"></div>\n                        </div>\n                    </div>\n                    <div class=\"volume-control-wrapper table-cell col-fixed-25\">\n                        <div class=\"volume-bar\" (click)=\"onVolumeChange($event)\" (mousemove)=\"onVolumeChanging($event)\">\n                            <div class=\"volume-bar-progress\" [style.top]=\"(100-volume) + '%'\">\n                                <div class=\"volume-bar-handle\"></div>\n                            </div>\n                        </div>\n                        <div class=\"volume-button text-center\" (click)=\"toggleVolumeState()\">\n                            <i class=\"fa fa-lg\"\n                                [ngClass]=\"{'fa-volume-up': volume >= 50, 'fa-volume-down':volume > 0 && volume < 50, 'fa-volume-off': volume === 0}\"></i>\n                        </div>\n                    </div>\n                    <div class=\"table-cell col-fixed-75 text-center\">\n                        {{currentTime | secsToMins}}\n                    </div>\n\n                    <div class=\"table-cell\">\n                        <div class=\"seek-bar\" (click)=\"onSeek($event)\" (mousemove)=\"onSeeking($event)\">\n                            <div class=\"seek-bar-progress\" [style.width]=\"seekBarPercentage + '%'\">\n                                <div class=\"seek-bar-handle\"></div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"table-cell col-fixed-75 text-center\">\n                        {{duration | secsToMins}}\n                    </div>\n\n                    <div class=\"table-cell col-fixed-15\">\n                        <div class=\"fullscreen-button pull-right\" (click)=\"toggleFullscreen()\"></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import {\n    Component,\n    Input,\n    ViewChild,\n    AfterViewInit,\n    ElementRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    OnDestroy,\n    OnChanges,\n    SimpleChanges,\n    OnInit\n} from '@angular/core';\n\nimport { TrackerService } from '../../services/tracker.service';\n\n@Component({\n    selector: 'ss-video-player',\n    exportAs: 'ss-video-player',\n    templateUrl: 'ss-video-player.html',\n    styleUrls: ['ss-video-player.scss'],\n    providers: [TrackerService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class SSVideoPlayerComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n    @Input() sources: Array<SSVideoSource>;\n    @Input() config?: SSPlayerConfig;\n\n    @ViewChild('videoWrapper', { static: true }) videoWrapper: ElementRef;\n    @ViewChild('videoOverlay', { static: true }) videoOverlay: ElementRef;\n    @ViewChild('video', { static: true }) videoRef: ElementRef;\n\n    selectedVideoSource: SSVideoSource;\n    selectedVideoSourceIndex = 0;\n\n    video: HTMLMediaElement;\n    isPlaying = false;\n    isInFullScreenMode = false;\n    volume = 100;\n    currentTime = 0;\n    duration = 0;\n    seekBarPercentage = 0;\n    overlayTimeoutInstance = null;\n    timeBeforeHide = 3000; // 3 seconds;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private trackerService: TrackerService\n    ) { }\n\n    ngOnInit() {\n        // let's give initial values to selectedVideoSource to prevent any null or undefined related errors\n        this.selectedVideoSource = {\n            title: '',\n            source: '',\n            poster: '',\n            initialTime: 0,\n        };\n\n        // default config\n        this.config = {\n            autoplay: false,\n            mute: false,\n            loop: SSLoopType.None,\n            trackUser: true\n        };\n    }\n\n    ngAfterViewInit() {\n        this.selectedVideoSource = this.sources[this.selectedVideoSourceIndex];\n        this.video = this.videoRef.nativeElement;\n\n        this.clearOverlayTimeout();\n\n        // If everything has loaded, we can start to detect changes\n        this.changeDetectorRef.detectChanges();\n\n        document.addEventListener('webkitfullscreenchange', () => {\n            this.isInFullScreenMode = (document as any).webkitIsFullScreen;\n        }, false);\n\n        document.addEventListener('keydown', (event) => {\n            if (event.key === ' ' && this.isInFullScreenMode) {\n                this.togglePlayingState();\n            }\n        });\n\n        this.volume = this.config.mute ? 0 : 100;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.sources) {\n            if (this.selectedVideoSourceIndex >= this.sources.length - 1) {\n                this.selectedVideoSourceIndex = 0;\n                this.selectedVideoSource = this.sources[this.selectedVideoSourceIndex];\n            }\n        }\n    }\n\n    play(index?: number) {\n        if (typeof index !== 'undefined' && this.sources.length > index) {\n            this.stop();\n            this.selectedVideoSourceIndex = index;\n            this.selectedVideoSource = this.sources[this.selectedVideoSourceIndex];\n        }\n\n        this.video.play();\n        this.isPlaying = true;\n\n        this.clearOverlayTimeout(true);\n\n        if (this.config.trackUser) {\n            this.trackerService.startTracking(this.selectedVideoSource.title);\n        }\n    }\n\n    pause() {\n        this.video.pause();\n        this.isPlaying = false;\n\n        this.clearOverlayTimeout();\n\n        if (this.config.trackUser) {\n            this.trackerService.stopTracking();\n        }\n    }\n\n    stop() {\n        this.pause();\n        this.skip((!this.selectedVideoSource.poster && this.selectedVideoSource.initialTime) || 0);\n    }\n\n    next() {\n        this.pause();\n\n        if (this.selectedVideoSourceIndex < this.sources.length - 1) {\n            this.selectedVideoSourceIndex++;\n        }\n\n        this.selectedVideoSource = this.sources[this.selectedVideoSourceIndex];\n    }\n\n    prev() {\n        this.pause();\n\n        if (this.selectedVideoSourceIndex > 0) {\n            this.selectedVideoSourceIndex--;\n        }\n\n        this.selectedVideoSource = this.sources[this.selectedVideoSourceIndex];\n    }\n\n    togglePlayingState() {\n        if (this.isPlaying) {\n            this.pause();\n        } else {\n            this.play();\n        }\n    }\n\n    toggleVolumeState() {\n        this.volume = this.volume > 0 ? 0 : 100;\n\n        this.video.volume = this.volume / 100;\n    }\n\n    onVideoLoaded() {\n        // This is needed for video duration otherwise duration variable of the video will be NaN (stands for not a number)\n        // Also this will trigger the ontimeupdated event so we can update the currentTime and duration variables on load\n        this.video.play();\n\n        // if autoplay is true then we should not stop it;\n        if (!this.config.autoplay && !this.isPlaying) {\n            this.stop();\n        } else {\n            this.play();\n        }\n\n        this.video.volume = this.volume ? 1 : 0;\n    }\n\n    onVideoPlaying() {\n\n    }\n\n    onVideoTimeUpdated() {\n        this.currentTime = this.video.currentTime || 0;\n        this.duration = this.video.duration || 0;\n        this.seekBarPercentage = Math.floor((this.currentTime / this.duration) * 100);\n    }\n\n    onVideoEnded() {\n        switch (this.config.loop) {\n\n            case SSLoopType.Once:\n                this.play();\n                break;\n\n            case SSLoopType.All:\n                if (this.sources.length - 1 > this.selectedVideoSourceIndex) {\n                    this.next();\n                } else {\n                    this.selectedVideoSourceIndex = 0;\n                    this.selectedVideoSource = this.sources[this.selectedVideoSourceIndex];\n                }\n                setTimeout(() => {\n                    this.play();\n                }, 1000);\n                break;\n\n            case SSLoopType.None:\n                this.stop();\n                break;\n        }\n    }\n\n    onVolumeChange(ev: MouseEvent) {\n        const volumeBarHeight = ev.target['offsetHeight']; // Computed width of the volume bar element\n        const ratio = (volumeBarHeight - ev.offsetY) / volumeBarHeight; // it will change between 0 and 1\n\n        this.video.volume = ratio;\n        this.volume = ratio * 100;\n    }\n\n    onVolumeChanging(ev: MouseEvent) {\n        if (ev.buttons > 0) {\n            this.onVolumeChange(ev);\n        }\n    }\n\n    onSeek(ev: MouseEvent) {\n        const seekBarWidth = ev.target['offsetWidth']; // Computed width of the seek bar element\n        const ratio = ev.offsetX / seekBarWidth; // it will change between 0 and 1\n        const computedPosition = this.duration * ratio;\n\n        this.skip(computedPosition);\n    }\n\n    onSeeking(ev: MouseEvent) {\n        if (ev.buttons > 0) {\n            this.onSeek(ev);\n        }\n    }\n\n    skip(value: number) {\n        this.video.currentTime = value;\n    }\n\n    clearOverlayTimeout(reset?: boolean) {\n        // Parent scope (that), it will be needed in setTimeout function\n        // because scope of the setTimeout different than parent scope\n        // so if we use \"this\" keyword in the function of setTimeout, it will give us the scope of the function (Window)\n        // hence we will use \"that\" reference constant in the setTimeout.\n        // Actually we can use lambda expression to create a function\n        // and we can access the current scope with \"this\" but i will use this for an example.\n        const that = this;\n\n        this.videoOverlay.nativeElement.style.opacity = 0.8;\n        this.videoOverlay.nativeElement.style.cursor = 'auto';\n\n        if (this.overlayTimeoutInstance) {\n            clearTimeout(this.overlayTimeoutInstance);\n            this.overlayTimeoutInstance = null;\n        }\n\n        if (reset && this.isPlaying) {\n            this.overlayTimeoutInstance = setTimeout(function () {\n                that.videoOverlay.nativeElement.style.opacity = 0;\n                that.videoOverlay.nativeElement.style.cursor = 'none';\n            }, this.timeBeforeHide);\n        }\n    }\n\n    toggleFullscreen() {\n        const wrapper = this.videoWrapper.nativeElement;\n\n        // for more information: https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreen\n        if (!this.isInFullScreenMode) {\n            if (wrapper.webkitRequestFullScreen) {\n                wrapper.webkitRequestFullScreen();\n            }\n        } else {\n            if ((document as any).webkitCancelFullScreen) {\n                (document as any).webkitCancelFullScreen();\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.trackerService.stopTracking();\n    }\n}\n\nexport interface SSPlayerConfig {\n    autoplay?: boolean;\n    mute?: boolean;\n    loop?: SSLoopType;\n    trackUser?: boolean;\n}\n\nexport enum SSLoopType {\n    None,\n    Once,\n    All\n}\n\nexport class SSVideoSource {\n    title: string; // Title of the video\n    source: string; // Local or remote path of the video\n    poster?: string; // Local or remote path of the poster image\n    initialTime?: number; // Time in seconds, it will be useful when no poster image available for the video otherwise it will not work\n}\n\nexport interface SSUserTrack {\n    sessionId: string;\n    videoTitle: string;\n    totalWatchingTime: number;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: 'error-page.html',\n    styleUrls: ['error-page.scss']\n})\nexport class ErrorPageComponent {\n    errorCode = 404;\n    errorMessage = 'Not Found';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SSVideoSource, SSPlayerConfig, SSLoopType } from '../../common/components/ss-video-player/ss-video-player.component';\n\n@Component({\n    templateUrl: 'video-player-page.html'\n})\nexport class VideoPlayerPageComponent implements OnInit {\n    playerConfig: SSPlayerConfig;\n    videoSources: Array<SSVideoSource> = [];\n    videoSource: SSVideoSource = new SSVideoSource();\n\n    ngOnInit() {\n        this.playerConfig = {\n            loop: SSLoopType.All,\n            autoplay: false,\n            trackUser: true\n        };\n\n        this.videoSources = [\n            {\n                title: 'Big Buck Bunny - 2008',\n                poster: 'https://www.blender.org/wp-content/uploads/2013/07/poster-bigbuckbunny.jpg',\n                source: 'https://download.blender.org/peach/bigbuckbunny_movies/big_buck_bunny_1080p_stereo.ogg'\n            },\n            {\n                title: 'Sintel - 2010',\n                poster: 'https://www.blender.org/wp-content/uploads/2013/07/poster-sintel.jpg',\n                source: 'http://ftp.nluug.nl/pub/graphics/blender/demo/movies/Sintel.2010.1080p.mkv'\n            },\n            {\n                title: 'Tears of Steel - 2012',\n                poster: 'https://www.blender.org/wp-content/uploads/2013/07/poster-tearsofsteel.jpg',\n                source: 'http://media.xiph.org/mango/tears_of_steel_1080p.webm'\n            }\n        ];\n    }\n\n    addVideoSource(videoSource: SSVideoSource) {\n        this.videoSources.push(videoSource);\n\n        this.videoSource = videoSource;\n    }\n\n    removeVideoSource(index: number) {\n        this.videoSources = this.videoSources.filter(vs => vs !== this.videoSources[index]);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\n\n// modules\nimport { AppCommonModule } from './common/app-common.module';\n\n// pages\nimport { VideoStatisticsPageComponent } from './pages/video-statistics-page/video-statistics-page.component';\nimport { VideoPlayerPageComponent } from './pages/video-player-page/video-player-page.component';\nimport { ErrorPageComponent } from './pages/error-page/error-page.component';\n\n// routes\nconst routes: Route[] = [\n  { path: '', redirectTo: 'video-player', pathMatch: 'full' },\n  { path: 'video-player', component: VideoPlayerPageComponent },\n  { path: 'video-statistics', component: VideoStatisticsPageComponent },\n  { path: '**', component: ErrorPageComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VideoStatisticsPageComponent,\n    VideoPlayerPageComponent,\n    ErrorPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppCommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"row\">\n    <div class=\"col\">\n        <ss-video-player [config]=\"playerConfig\" [sources]=\"videoSources\"></ss-video-player>\n    </div>\n</div>\n","<div class=\"page-wrapper\">\n    <h1 class=\"error-code\">{{errorCode}}</h1>\n    <p class=\"error-message\">{{errorMessage}}</p>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}